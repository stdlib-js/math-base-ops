{
  "version": 3,
  "sources": ["../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-read-only-property' );\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name caddf\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/complex/float32/base/add}\n*/\nsetReadOnly( ns, 'caddf', require( '@stdlib/complex-float32-base-add' ) );\n\n/**\n* @name cmulf\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/complex/float32/base/mul}\n*/\nsetReadOnly( ns, 'cmulf', require( '@stdlib/complex-float32-base-mul' ) );\n\n/**\n* @name cadd\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/complex/float64/base/add}\n*/\nsetReadOnly( ns, 'cadd', require( '@stdlib/complex-float64-base-add' ) );\n\n/**\n* @name cmul\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/complex/float64/base/mul}\n*/\nsetReadOnly( ns, 'cmul', require( '@stdlib/complex-float64-base-mul' ) );\n\n/**\n* @name csub\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/ops/csub}\n*/\nsetReadOnly( ns, 'csub', require( '@stdlib/math-base-ops-csub' ) );\n\n/**\n* @name csubf\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/math/base/ops/csubf}\n*/\nsetReadOnly( ns, 'csubf', require( '@stdlib/math-base-ops-csubf' ) );\n\n/**\n* @name mul\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/mul}\n*/\nsetReadOnly( ns, 'mul', require( '@stdlib/number-float64-base-mul' ) );\n\n/**\n* @name sub\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/float64/base/sub}\n*/\nsetReadOnly( ns, 'sub', require( '@stdlib/number-float64-base-sub' ) );\n\n\n// EXPORTS //\n\nmodule.exports = ns;\n"],
  "mappings": "aA0BA,IAAIA,EAAc,QAAS,yCAA0C,EAUjEC,EAAK,CAAC,EASVD,EAAaC,EAAI,QAAS,QAAS,kCAAmC,CAAE,EASxED,EAAaC,EAAI,QAAS,QAAS,kCAAmC,CAAE,EASxED,EAAaC,EAAI,OAAQ,QAAS,kCAAmC,CAAE,EASvED,EAAaC,EAAI,OAAQ,QAAS,kCAAmC,CAAE,EASvED,EAAaC,EAAI,OAAQ,QAAS,4BAA6B,CAAE,EASjED,EAAaC,EAAI,QAAS,QAAS,6BAA8B,CAAE,EASnED,EAAaC,EAAI,MAAO,QAAS,iCAAkC,CAAE,EASrED,EAAaC,EAAI,MAAO,QAAS,iCAAkC,CAAE,EAKrE,OAAO,QAAUA",
  "names": ["setReadOnly", "ns"]
}
